#!/bin/bash
# adapted from https://gist.github.com/davejamesmiller/1965569

ask() {
    local prompt default reply

    prompt='y/n'
    default=''
    
    while true; do

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read -r reply </dev/tty

        # Default?
        if [[ -z $reply ]]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}

export rbname=/mnt/u/wsl-ros/ros-backup-2122

rbpth=$rbname'.tar.gz'
rbwpth=$(sed "s/\/mnt\/u/U\:/;s/\//\\\/g" <<< "$rbpth")

if [ -f $rbpth ]; then
  backup_exists=yes
else
  backup_exists=no
fi

if [ $1 == 'backup' ]; then
  if [ $backup_exists == 'yes' ]; then
    if ask "Preparing to backup your WSL-ROS environment: This will overwrite your existing WSL-ROS backup. Are you sure you want to continue?"; then
      rosbackup.sh
    else
      echo "Backup cancelled."
    fi
  else
    rosbackup.sh
  fi
elif [ $1 == 'restore' ]; then
  if [ $backup_exists == 'yes' ]; then
    if ask "Preparing to restore from a previous WSL-ROS backup: Do you want to continue?"; then
      rosrestore.sh
    else
      echo "Restore cancelled."
    fi
  else
    echo "Unable to restore: A '"$rbwpth"' file does not exit."
  fi
elif [ $1 == 'first-launch' ]; then
  echo "Welcome to WSL-ROS!"
  if [ $backup_exists == 'yes' ]; then
    if ask "It looks like you already have a backup from a previous session, do you want to restore this now?"; then
      rosrestore.sh
    else
      echo "Nothing was restored. Starting from fresh."
    fi
  fi
else
  echo "$1 is not a valid input, use either 'backup' or 'restore'"
fi

